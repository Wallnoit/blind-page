<header
  id = "landing-header"
  class="py-4 px-10 flex items-center fixed top-0 w-full  z-40 text-current  transition-colors duration-500"
>
  <div class="flex flex-grow justify-start text-4xl basis-1/3 ">
    <a href="#">Blind</a>

  </div>

  <div class="block sm:hidden">
    <button id='boton' class="flex items-center px-3 py-2  rounded  hover:text-white hover:border-white">
      <svg class="fill-current h-6 w-6" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><title>Menu</title><path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"/></svg>
    </button>
  </div>

  <nav class="hidden  sm:block " id="menu">
    <div class=" sm:bg-transparent w-full">
        <ul class="flex flex-grow justify-center text-xl [&>li>a]:inline-block [&>li>a]:px-6 [&>li>a]:py-2 basis-2/3 ">
            <li><a  href="#">Inicio</a></li>
            <li><a  href="#">Fotos</a></li>
            <li><a href="#">Musica</a></li>
            <li><a href="#">Contacto</a></li>
          </ul>

    </div>
  </nav>




</header>

<script>
  const headerElement = document.querySelector("#landing-header") as HTMLElement;

  const buttonElement = document.querySelector("#boton") as HTMLElement;

  const observerOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.9,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      
      if (entry.isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        headerElement.style.color = color;
      }
    });
  }, observerOptions);


  const sections = document.querySelectorAll(".landing-section");
  sections.forEach((section) => {
    observer.observe(section);
  });

    buttonElement.addEventListener("click", () => {
        const menu = document.querySelector("#menu") as HTMLElement;
        menu.classList.toggle("hidden");
    });
</script>
